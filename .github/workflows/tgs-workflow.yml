# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test and push TheGodStack Graphql CI

on:
  push:
    branches: [ 'main', 'develop' ]
  pull_request:
    branches: [ 'main', 'develop' ]
env:
  APP_ENV: production
  NODE_ENV: production
  HTTP_API_URL: http://api.local.thegodstack.com/
  WS_API_URL: ws://api.local.thegodstack.com/graphql
  CLIENT: thegodstack
  DEBUG: true

jobs:
  unity-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - run: yarn install --production=false
    - run: yarn lint
    - run: yarn test
  
  unity-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - run: yarn install --production=false
    - run: node scripts/parseconfig.js
    - run: yarn lint
    - run: yarn test
  
  integration-test:
    needs: [unity-test-backend, unity-test-frontend ]
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.18.3-chrome87-ff82

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - run: ./addHosts.sh
    - run: ./ci.sh
    - run: ./frontend/wait-for-it.sh -t 0 spa.local.thegodstack.com:80 -- echo "spa online!"
    - run: cd frontend && cypress run

  build-and-push-backend:
    needs: integration-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/registry/production/Dockerfile
        push: true
        tags: thegodstack/backend

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    
  
  
  build-and-push-frontend:
    needs: integration-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install --production=false
    - run: node scripts/parseconfig.js
    - run: yarn build
    # - run: apt install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        file: ./frontend/registry/production/Dockerfile
        push: true
        tags: thegodstack/frontend

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}