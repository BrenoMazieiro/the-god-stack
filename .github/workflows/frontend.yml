# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: React Graphql CI

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - run: echo ${{env.HTTP_API_URL}}
    - run: yarn install
    - run: yarn lint
    - run: cp ./src/environment/index_example.js ./src/environment/index.js
    - run: yarn test
    - run: node scripts/parseconfig.js
    - run: yarn build
    - run: |
            echo CLIENT="$CLIENT" >> "${BASH_ENV}"
            echo DEBUG="$DEBUG" >> "${BASH_ENV}"
            echo HTTP_API_URL="$HTTP_API_URL" >> "${BASH_ENV}"
            echo WS_API_URL="$WS_API_URL" >> "${BASH_ENV}"
    - run: |
        set -x
        VER="17.12.0-ce"
        curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
        tar -xz -C /tmp -f /tmp/docker-$VER.tgz
        mv /tmp/docker/* /usr/bin
    - run: docker build -f registry/production/Dockerfile . -t thegodstack/frontend
    - run: docker push thegodstack/frontend
